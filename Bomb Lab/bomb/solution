phase_1:
Compare the input with a string at 0x402400
use (gdb) print (char*) x402400
"Border relations with Canada have never been better."

-------------------------------------------------------------
phase_2:
Read six numbers and compare them one by one.
%rsp points to the first one
%rbp points to the null at the end
a[0] == 1?

Iterate: 
rsp+4(a[i++]);
not the end?(rsp!=rbp)
compare: 2 * a[i-1] and a[i]
  
result:1 2 4 8 16 32

-------------------------------------------------------------
phase_3:
(gdb) print (char*) 0x4025cf
"%d %d"
input 2 integars 'a' and 'b'
value of 'b' is decided by 'a'
'a' is stored at 0x8(%rsp), 'b' at 0xc(%rsp)
a:[0 7]
Use gdb to try all the possible 'a' values and their 'b' values

a  jmpqDest    b      b(deci)
0  0x400f7c   0xcf      207
1  0x400fb9   0x137     311
2  0x400f83   0x2c3     707
3  0x400f8a   0x100     256
4  0x400f91   0x185     389
5  0x400f98   0xce      206
6  0x400f9f   0x2aa     682
7  0x400fa6   0x147     327 

-------------------------------------------------------------
phase_4:
input 2 integars
1.'a' <= 0xe
2.'b' = 0
3.func4 return eax=0

func4:(initial edx = 0xe, esi = 0x0)
ecx = ((edx-esi)>>31 + edi-esi) >> 1 + esi;
(
eax = edx - esi;
ecx = eax >> 31;(logical)
eax += ecx;
eax >>= 1;(arith)
ecx = eax + esi;
//which means, ecx = (edi-esi)/2+esi
)

if (ecx <= edi('a'))
	eax = 0;
	if( ecx >= edi)
		return eax;
	else
		esi = rcx + 1;
		func4
else
	edx = rcx - 1;
	func4
	eax *= 2;
//So when ecx = edi(a), print out eax = 0, that is, edi = 7

--------------------------------------------------------
phase_5:
input 6 length string
phase_5+52:from 0-5, use 'and' to take the last 4-digit of every char
phase_5+55:use that 4-digit as the offset, take char from 0x4024b0:
"maduiersnfotvbylSo you think you can stop the bomb with ctrl-c, do you?"
phase_5+81~+91:compare the taken string with 0x40245e:
"flyers"

So we just need to input 6 chars which last 4-digit is equal to:[9 f e 5 6 7] in ascii code.

--------------------------------------------------------
phase_6:


